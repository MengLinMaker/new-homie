AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: service-scrape - A scraper for real estate data

Globals:
  Function:
    Runtime: nodejs22.x
    Architectures:
      - arm64
    ReservedConcurrentExecutions: 1 # Smallest default
    Timeout: 1 # Smallest default
    MemorySize: 1769 # Also allocates 1vCPU
    Handler: index.handler

Resources:
  BatchTrigger:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 60 # Jobs may come in various sizes
      MemorySize: 256 # Limit CPU to throttle scraping
      CodeUri: ./function-batch_trigger/src/
      Events:
        Cron:
          Type: Schedule
          Properties:
            # 10pm Fri UTC => 8am Sat AEST
            Schedule: cron(0 22 ? * 6 *)
            Name: BatchTriggerEvent
      Environment:
        Variables:
          BATCHSCRAPESUBURBSQUEUE_QUEUE_NAME: !GetAtt BatchScrapeSuburbsQueue.QueueName
          BATCHSCRAPESUBURBSQUEUE_QUEUE_ARN: !GetAtt BatchScrapeSuburbsQueue.Arn
          BATCHSCRAPESUBURBSQUEUE_QUEUE_URL: !Ref BatchScrapeSuburbsQueue
      Policies:
        - SQSSendMessagePolicy:
            QueueName: !GetAtt BatchScrapeSuburbsQueue.QueueName
  BatchScrapeSuburbsQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: BatchScrapeSuburbsQueue
      MessageRetentionPeriod: 432000 # Retain for 5 days
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt BatchScrapeSuburbsDLQ.Arn
        maxReceiveCount: 3 # Retry 3 times
  BatchScrapeSuburbsDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: BatchScrapeSuburbsQueue
      MessageRetentionPeriod: 1209600 # Retain for 14 days
  BatchScrapeSuburbs:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 900 # Jobs may come in various sizes
      MemorySize: 256 # Limit CPU to throttle scraping
      CodeUri: ./function-batch_scrape_suburbs/src/
      Events:
        SQS:
          Type: SQS
          Properties:
            Queue: !GetAtt BatchScrapeSuburbsQueue.Arn
            BatchSize: 10
            Enabled: false
            ScalingConfig:
              MaximumConcurrency: 2

    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - index.mts
        External:
          - "@aws-sdk/*"
          - aws-sdk
        Minify: false
  ReadPublic:
    Type: AWS::Serverless::Function
    Properties:
      ReservedConcurrentExecutions: 10 # Prevent database overload
      Timeout: 3
      CodeUri: ./function-read_public/src/
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: get # Cacheable

Outputs:
  EnspointUrl:
    Description: Prod API Gateway endpoint URL
    Value: !Sub https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod
